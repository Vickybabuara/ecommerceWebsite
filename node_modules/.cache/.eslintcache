[{"E:\\Project\\ecommerce-react-website\\src\\index.js":"1","E:\\Project\\ecommerce-react-website\\src\\App.js":"2","E:\\Project\\ecommerce-react-website\\src\\components\\Navbar.js":"3","E:\\Project\\ecommerce-react-website\\src\\components\\Cart.js":"4","E:\\Project\\ecommerce-react-website\\src\\components\\Products.js":"5","E:\\Project\\ecommerce-react-website\\src\\components\\NotFound.js":"6","E:\\Project\\ecommerce-react-website\\src\\Global\\ProductsContext.js":"7","E:\\Project\\ecommerce-react-website\\src\\Global\\CartContext.js":"8","E:\\Project\\ecommerce-react-website\\src\\components\\Banner.js":"9","E:\\Project\\ecommerce-react-website\\src\\Global\\CartReducer.js":"10"},{"size":152,"mtime":1668153446790,"results":"11","hashOfConfig":"12"},{"size":885,"mtime":1669907244564,"results":"13","hashOfConfig":"12"},{"size":563,"mtime":1668767014547,"results":"14","hashOfConfig":"12"},{"size":2965,"mtime":1669906654244,"results":"15","hashOfConfig":"12"},{"size":1180,"mtime":1672357030496,"results":"16","hashOfConfig":"12"},{"size":250,"mtime":1668153446011,"results":"17","hashOfConfig":"12"},{"size":1241,"mtime":1668739266420,"results":"18","hashOfConfig":"12"},{"size":583,"mtime":1668752946796,"results":"19","hashOfConfig":"12"},{"size":285,"mtime":1668153733153,"results":"20","hashOfConfig":"12"},{"size":1952,"mtime":1668166733498,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ofkzl1",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"E:\\Project\\ecommerce-react-website\\src\\index.js",[],["45","46"],"E:\\Project\\ecommerce-react-website\\src\\App.js",[],"E:\\Project\\ecommerce-react-website\\src\\components\\Navbar.js",[],"E:\\Project\\ecommerce-react-website\\src\\components\\Cart.js",["47"],"import React,{useContext} from \"react\";\nimport {CartContext} from \"../Global/CartContext\"\nimport { CartReducer } from \"../Global/CartReducer\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n  toast.configure();\n\nconst Cart=(props)=>{\n    const {shoppingCart, totalPrice, qty, dispatch} = useContext(CartContext);\n    const data = useContext(CartContext);\n    console.log(data);// adding to card\n     const handleToken = async (token)=>{\n       //console.log(token);\n        const product  = {name:\"All Products\", price: totalPrice} \n        const response = await axios.post(\"http://localhost:8080/checkout\", {\n              product,\n              token\n        });\n         const {status} = response.data;\n         console.log(status);\n       if (status===\"success\"){\n            dispatch({type :'EMPTY'})\n             props.history.push('/');\n            toast.success(\"You have paid successfully\", {position:toast.POSITION.TOP_RIGHT});\n        }\n    //     console.log(response);\n     }\nreturn(\n<div className=\"container\">\n    <div className=\"cart-container\" style={{marginTop: '100px'}}>\n{shoppingCart.length >0 \n? shoppingCart.map(carts=>(<div className='cart' key={carts.id}> \n<span className='cart-image'>\n    <img src={carts.image} alt='not found'/>\n</span>\n<span className='cart-product-name'>\n{carts.name}\n</span>\n<span className='cart-product-price'>\n{carts.price}\n</span>\n<span className='inc' onClick={()=>dispatch({type:'INC', id: carts.id, cart:carts})}> \n<i className='fas fa-plus'></i>\n</span>\n<span className='product-quantity'>\n{carts.qty}\n</span>\n<span className='dec' onClick={()=>dispatch({type:'DEC', id: carts.id, cart:carts})}>\n<i className='fas fa-minus'></i>\n</span>\n<span className='product-total-price'>\n${carts.price*carts.qty}.00\n</span>\n<span className='delete' onClick={()=>dispatch({type:'DELETE', id: carts.id, cart:carts})}>\n<i className='fas fa-trash-alt'></i>\n</span>\n</div>))\n:<div className=\"empty\">Sorry your card is empty.</div>}\n    </div>\n{shoppingCart.length>0? \n<div className=\"cart-summary\">\n<div className=\"summary\">\n    <h3>Cart Summary</h3>\n    <div className=\"total-items\">\n      <div className=\"items\">\n          Total Items\n      </div>\n      <div className=\"item-count\">\n          {qty}\n      </div>\n    </div>\n    <div className=\"total-price-section\"> \n    <div className=\"just-title\">\n          Total Price\n      </div>\n      <div className=\"item-price\">\n          ${totalPrice}.00\n      </div> \n   <div className=\"stripe-section\">\n    <StripeCheckout\n    stripeKey=\"pk_test_51IqfILSGBfzDew1juUWK27iUjeRDbECLzVimDHlzEBHEXKbLd8sJJWubscxjQbigJJGkVYjCiRh4oHHDQMHumYOw00pl2kFV6M\"\n    token={handleToken}\n    billingAddress\n    shippingAddress\n    amount={totalPrice*100}\n    name=\"All Products\"\n    >\n\n    </StripeCheckout>\n    </div> \n</div>\n</div>\n</div>:''\n}\n</div>\n)\n}\n\nexport default Cart","E:\\Project\\ecommerce-react-website\\src\\components\\Products.js",[],"E:\\Project\\ecommerce-react-website\\src\\components\\NotFound.js",[],"E:\\Project\\ecommerce-react-website\\src\\Global\\ProductsContext.js",[],"E:\\Project\\ecommerce-react-website\\src\\Global\\CartContext.js",[],"E:\\Project\\ecommerce-react-website\\src\\components\\Banner.js",[],"E:\\Project\\ecommerce-react-website\\src\\Global\\CartReducer.js",["48","49","50","51","52","53"],"import { act } from \"react-dom/test-utils\";\n\nexport const CartReducer=(state, action)=>{\n const {shoppingCart, totalPrice, qty} = state;\n let product;\n let index;\n let updatedPrice;\n let updatedQty;\n\nswitch(action.type)\n{\ncase 'ADD_TO_CART':\n        //console.log(\"add to cart\");\n        const check= shoppingCart.find(product =>product.id === action.id);\n        if(check){\n            return state;\n        } \n        else\n        {\n              product = action.product;\n              product['qty']=1;\n              updatedQty= qty+1;\n              updatedPrice= totalPrice+product.price;\n              return{shoppingCart:[product, ...shoppingCart], totalPrice: updatedPrice, qty: updatedQty}\n        }\nbreak;\ncase 'INC':\n      product=action.cart;\n      product.qty= product.qty + 1; //\n      updatedPrice= totalPrice + product.price;\n      updatedQty= qty+ 1;\n      index=shoppingCart.findIndex(cart=> cart.id===action.id);\n      shoppingCart[index]=product;\n      return{shoppingCart:[...shoppingCart], totalPrice:updatedPrice, qty:updatedQty}\n      break;\n\ncase 'DEC':\n        product=action.cart;\n        if(product.qty > 1){\n            product.qty= product.qty - 1;\n            updatedPrice= totalPrice - product.price;\n            updatedQty= qty- 1;\n            index= shoppingCart.findIndex(cart=> cart.id===action.id);\n            shoppingCart[index]=product;\n         return{shoppingCart:[...shoppingCart], totalPrice:updatedPrice, qty:updatedQty}\n        }\n        else{return state}\n        break;\n\ncase 'DELETE':\n        const filtered = shoppingCart.filter(product=> product.id!==action.id)\n        product= action.cart;\n        updatedQty= qty-product.qty;\n        updatedPrice= totalPrice- product.price* product.qty;\n        return{shoppingCart:[...filtered], totalPrice:updatedPrice, qty:updatedQty}\n        break; \ncase 'empty':\n        return{shoppingCart:[], totalPrice:0, qty:0}\n        break; \n\ndefault: return state\n\n}\n}",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":3,"column":10,"nodeType":"60","messageId":"61","endLine":3,"endColumn":21},{"ruleId":"58","severity":1,"message":"62","line":1,"column":10,"nodeType":"60","messageId":"61","endLine":1,"endColumn":13},{"ruleId":"63","severity":1,"message":"64","line":26,"column":1,"nodeType":"65","messageId":"66","endLine":26,"endColumn":7},{"ruleId":"63","severity":1,"message":"64","line":35,"column":7,"nodeType":"65","messageId":"66","endLine":35,"endColumn":13},{"ruleId":"63","severity":1,"message":"64","line":48,"column":9,"nodeType":"65","messageId":"66","endLine":48,"endColumn":15},{"ruleId":"63","severity":1,"message":"64","line":56,"column":9,"nodeType":"65","messageId":"66","endLine":56,"endColumn":15},{"ruleId":"63","severity":1,"message":"64","line":59,"column":9,"nodeType":"65","messageId":"66","endLine":59,"endColumn":15},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'CartReducer' is defined but never used.","Identifier","unusedVar","'act' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation"]