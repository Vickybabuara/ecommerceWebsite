{"ast":null,"code":"import { act } from \"react-dom/test-utils\";\nexport const CartReducer = (state, action) => {\n  const {\n    shoppingCart,\n    totalPrice,\n    qty\n  } = state;\n  let product;\n  let index;\n  let updatedPrice;\n  let updatedQty;\n\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      //console.log(\"add to cart\");\n      const check = shoppingCart.find(product => product.id === action.id);\n\n      if (check) {\n        return state;\n      } else {\n        product = action.product;\n        product['qty'] = 1;\n        updatedQty = qty + 1;\n        updatedPrice = totalPrice + product.price;\n        return {\n          shoppingCart: [product, ...shoppingCart],\n          totalPrice: updatedPrice,\n          qty: updatedQty\n        };\n      }\n\n      break;\n\n    case 'INC':\n      product = action.cart;\n      product.qty = product.qty + 1; //\n\n      updatedPrice = totalPrice + product.price;\n      updatedQty = qty + 1;\n      index = shoppingCart.findIndex(cart => cart.id === action.id);\n      shoppingCart[index] = product;\n      return {\n        shoppingCart: [...shoppingCart],\n        totalPrice: updatedPrice,\n        qty: updatedQty\n      };\n      break;\n\n    case 'DEC':\n      product = action.cart;\n\n      if (product.qty > 1) {\n        product.qty = product.qty - 1;\n        updatedPrice = totalPrice - product.price;\n        updatedQty = qty - 1;\n        index = shoppingCart.findIndex(cart => cart.id === action.id);\n        shoppingCart[index] = product;\n        return {\n          shoppingCart: [...shoppingCart],\n          totalPrice: updatedPrice,\n          qty: updatedQty\n        };\n      } else {\n        return state;\n      }\n\n      break;\n\n    case 'DELETE':\n      const filtered = shoppingCart.filter(product => product.id !== action.id);\n      product = action.cart;\n      updatedQty = qty - product.qty;\n      updatedPrice = totalPrice - product.price * product.qty;\n      return {\n        shoppingCart: [...filtered],\n        totalPrice: updatedPrice,\n        qty: updatedQty\n      };\n      break;\n\n    case 'empty':\n      return {\n        shoppingCart: [],\n        totalPrice: 0,\n        qty: 0\n      };\n      break;\n\n    default:\n      return state;\n  }\n};\n_c = CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["E:/Project/ecommerce-react-website/src/Global/CartReducer.js"],"names":["act","CartReducer","state","action","shoppingCart","totalPrice","qty","product","index","updatedPrice","updatedQty","type","check","find","id","price","cart","findIndex","filtered","filter"],"mappings":"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","sourcesContent":["import { act } from \"react-dom/test-utils\";\n\nexport const CartReducer=(state, action)=>{\n const {shoppingCart, totalPrice, qty} = state;\n let product;\n let index;\n let updatedPrice;\n let updatedQty;\n\nswitch(action.type)\n{\ncase 'ADD_TO_CART':\n        //console.log(\"add to cart\");\n        const check= shoppingCart.find(product =>product.id === action.id);\n        if(check){\n            return state;\n        } \n        else\n        {\n              product = action.product;\n              product['qty']=1;\n              updatedQty= qty+1;\n              updatedPrice= totalPrice+product.price;\n              return{shoppingCart:[product, ...shoppingCart], totalPrice: updatedPrice, qty: updatedQty}\n        }\nbreak;\ncase 'INC':\n      product=action.cart;\n      product.qty= product.qty + 1; //\n      updatedPrice= totalPrice + product.price;\n      updatedQty= qty+ 1;\n      index=shoppingCart.findIndex(cart=> cart.id===action.id);\n      shoppingCart[index]=product;\n      return{shoppingCart:[...shoppingCart], totalPrice:updatedPrice, qty:updatedQty}\n      break;\n\ncase 'DEC':\n        product=action.cart;\n        if(product.qty > 1){\n            product.qty= product.qty - 1;\n            updatedPrice= totalPrice - product.price;\n            updatedQty= qty- 1;\n            index= shoppingCart.findIndex(cart=> cart.id===action.id);\n            shoppingCart[index]=product;\n         return{shoppingCart:[...shoppingCart], totalPrice:updatedPrice, qty:updatedQty}\n        }\n        else{return state}\n        break;\n\ncase 'DELETE':\n        const filtered = shoppingCart.filter(product=> product.id!==action.id)\n        product= action.cart;\n        updatedQty= qty-product.qty;\n        updatedPrice= totalPrice- product.price* product.qty;\n        return{shoppingCart:[...filtered], totalPrice:updatedPrice, qty:updatedQty}\n        break; \ncase 'empty':\n        return{shoppingCart:[], totalPrice:0, qty:0}\n        break; \n\ndefault: return state\n\n}\n}"]},"metadata":{},"sourceType":"module"}